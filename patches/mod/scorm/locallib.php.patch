diff --git a/mod/scorm/locallib.php b/mod/scorm/locallib.php
index 6de7026..51d79ee 100644
--- a/mod/scorm/locallib.php
+++ b/mod/scorm/locallib.php
@@ -14,14 +14,6 @@
 // You should have received a copy of the GNU General Public License
 // along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
 
-/**
- * Library of internal classes and functions for module SCORM
- *
- * @package    mod_scorm
- * @copyright  1999 onwards Roberto Pinna
- * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
- */
-
 require_once("$CFG->dirroot/mod/scorm/lib.php");
 require_once("$CFG->libdir/filelib.php");
 
@@ -710,7 +702,7 @@ function scorm_grade_user($scorm, $userid) {
 
         break;
         case AVERAGEATTEMPT:
-            $attemptcount = scorm_get_attempt_count($userid, $scorm, true, true);
+            $attemptcount = scorm_get_attempt_count($userid, $scorm, true);
             if (empty($attemptcount)) {
                 return 0;
             } else {
@@ -926,7 +918,7 @@ function scorm_view_display ($user, $scorm, $action, $cm) {
         }
         ?>
               <br />
-              <input type="hidden" name="scoid" value="<?php echo $scorm->launch ?>" />
+              <input type="hidden" name="scoid"/>
               <input type="hidden" name="cm" value="<?php echo $cm->id ?>"/>
               <input type="hidden" name="currentorg" value="<?php echo $orgidentifier ?>" />
               <input type="submit" value="<?php print_string('enter', 'scorm') ?>" />
@@ -1245,43 +1237,27 @@ function scorm_get_attempt_status($user, $scorm, $cm='') {
  *
  * @param object $user Current context user
  * @param object $scorm a moodle scrom object - mdl_scorm
- * @param bool $returnobjects if true returns a object with attempts, if false returns count of attempts.
- * @param bool $ignoremissingcompletion - ignores attempts that haven't reported a grade/completion.
+ * @param bool $attempts return the list of attempts
  * @return int - no. of attempts so far
  */
-function scorm_get_attempt_count($userid, $scorm, $returnobjects = false, $ignoremissingcompletion = false) {
+function scorm_get_attempt_count($userid, $scorm, $attempts_only=false) {
     global $DB;
-
-    // Historically attempts that don't report these elements haven't been included in the average attempts grading method
-    // we may want to change this in future, but to avoid unexpected grade decreases we're leaving this in. MDL-43222
-    if (scorm_version_check($scorm->version, SCORM_13)) {
-        $element = 'cmi.score.raw';
-    } else if ($scorm->grademethod == GRADESCOES) {
-        $element = 'cmi.core.lesson_status';
-    } else {
+    $attemptcount = 0;
         $element = 'cmi.core.score.raw';
+    if ($scorm->grademethod == GRADESCOES) {
+        $element = 'cmi.core.lesson_status';
     }
-
-    if ($returnobjects) {
-        $params = array('userid' => $userid, 'scormid' => $scorm->id);
-        if ($ignoremissingcompletion) { // Exclude attempts that don't have the completion element requested.
-            $params['element'] = $element;
+    if (scorm_version_check($scorm->version, SCORM_13)) {
+        $element = 'cmi.score.raw';
         }
-        $attempts = $DB->get_records('scorm_scoes_track', $params, 'attempt', 'DISTINCT attempt AS attemptnumber');
+    $attempts = $DB->get_records_select('scorm_scoes_track', "element=? AND userid=? AND scormid=?", array($element, $userid, $scorm->id), 'attempt', 'DISTINCT attempt AS attemptnumber');
+    if ($attempts_only) {
         return $attempts;
-    } else {
-        $params = array($userid, $scorm->id);
-        $sql = "SELECT COUNT(DISTINCT attempt)
-                  FROM {scorm_scoes_track}
-                 WHERE userid = ? AND scormid = ?";
-        if ($ignoremissingcompletion) { // Exclude attempts that don't have the completion element requested.
-            $sql .= ' AND element = ?';
-            $params[] = $element;
         }
-
-        $attemptscount = $DB->count_records_sql($sql, $params);
-        return $attemptscount;
+    if (!empty($attempts)) {
+        $attemptcount = count($attempts);
     }
+    return $attemptcount;
 }
 
 /**
@@ -1770,7 +1746,7 @@ function scorm_get_toc($user, $scorm, $cmid, $toclink=TOCJSLINK, $currentorg='',
     global $CFG, $DB, $OUTPUT;
 
     if (empty($attempt)) {
-        $attempt = scorm_get_last_attempt($scorm->id, $user->id);
+        $attempt = scorm_get_attempt_count($user->id, $scorm);
     }
 
     $result = new stdClass();
