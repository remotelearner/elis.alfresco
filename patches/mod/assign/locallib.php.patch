diff --git a/mod/assign/locallib.php b/mod/assign/locallib.php
index cf99958..b99ae1b 100644
--- a/mod/assign/locallib.php
+++ b/mod/assign/locallib.php
@@ -1181,8 +1181,12 @@ class assign {
                               maxlength="10"
                               class="quickgrade"/>';
                 $o .= '&nbsp;/&nbsp;' . format_float($this->get_instance()->grade, 2);
+                $o .= '<input type="hidden"
+                              name="grademodified_' . $userid . '"
+                              value="' . $modified . '"/>';
                 return $o;
             } else {
+                $o .= '<input type="hidden" name="grademodified_' . $userid . '" value="' . $modified . '"/>';
                 if ($grade == -1 || $grade === null) {
                     $o .= '-';
                 } else {
@@ -1221,6 +1225,9 @@ class assign {
                     $o .= '<option value="' . $optionid . '" ' . $selected . '>' . $option . '</option>';
                 }
                 $o .= '</select>';
+                $o .= '<input type="hidden" ' .
+                             'name="grademodified_' . $userid . '" ' .
+                             'value="' . $modified . '"/>';
                 return $o;
             } else {
                 $scaleid = (int)$grade;
@@ -2392,7 +2399,8 @@ class assign {
                    $action,
                    $fullurl,
                    $info,
-                   $this->get_course_module()->id);
+                   $this->get_course_module()->id,
+                   $USER->id);
     }
 
     /**
@@ -4094,7 +4102,6 @@ class assign {
 
         $info = new stdClass();
         if ($blindmarking) {
-            $userfrom = clone($userfrom);
             $info->username = get_string('participant', 'assign') . ' ' . $uniqueidforuser;
             $userfrom->firstname = get_string('participant', 'assign');
             $userfrom->lastname = $uniqueidforuser;
@@ -4481,8 +4488,6 @@ class assign {
         foreach ($currentgrades as $current) {
             $modified = $users[(int)$current->userid];
             $grade = $this->get_user_grade($modified->userid, false);
-            // Check to see if the grade column was even visible.
-            $gradecolpresent = optional_param('quickgrade_' . $modified->userid, false, PARAM_INT) !== false;
 
             // Check to see if the outcomes were modified.
             if ($CFG->enableoutcomes) {
@@ -4490,9 +4495,7 @@ class assign {
                     $oldoutcome = $outcome->grades[$modified->userid]->grade;
                     $paramname = 'outcome_' . $outcomeid . '_' . $modified->userid;
                     $newoutcome = optional_param($paramname, -1, PARAM_FLOAT);
-                    // Check to see if the outcome column was even visible.
-                    $outcomecolpresent = optional_param($paramname, false, PARAM_FLOAT) !== false;
-                    if ($outcomecolpresent && ($oldoutcome != $newoutcome)) {
+                    if ($oldoutcome != $newoutcome) {
                         // Can't check modified time for outcomes because it is not reported.
                         $modifiedusers[$modified->userid] = $modified;
                         continue;
@@ -4503,8 +4506,6 @@ class assign {
             // Let plugins participate.
             foreach ($this->feedbackplugins as $plugin) {
                 if ($plugin->is_visible() && $plugin->is_enabled() && $plugin->supports_quickgrading()) {
-                    // The plugins must handle is_quickgrading_modified correctly - ie
-                    // handle hidden columns.
                     if ($plugin->is_quickgrading_modified($modified->userid, $grade)) {
                         if ((int)$current->lastmodified > (int)$modified->lastmodified) {
                             return get_string('errorrecordmodified', 'assign');
@@ -4525,8 +4526,7 @@ class assign {
             if ($current->grade !== null) {
                 $current->grade = floatval($current->grade);
             }
-            $gradechanged = $gradecolpresent && $current->grade !== $modified->grade;
-            if ($gradechanged) {
+            if ($current->grade !== $modified->grade) {
                 // Grade changed.
                 if ($this->grading_disabled($modified->userid)) {
                     continue;
@@ -4550,7 +4550,6 @@ class assign {
             $grade = $this->get_user_grade($userid, true);
             $grade->grade= grade_floatval(unformat_float($modified->grade));
             $grade->grader= $USER->id;
-            $gradecolpresent = optional_param('quickgrade_' . $userid, false, PARAM_INT) !== false;
 
             // Save plugins data.
             foreach ($this->feedbackplugins as $plugin) {
@@ -4573,10 +4572,8 @@ class assign {
                 foreach ($modified->gradinginfo->outcomes as $outcomeid => $outcome) {
                     $oldoutcome = $outcome->grades[$modified->userid]->grade;
                     $paramname = 'outcome_' . $outcomeid . '_' . $modified->userid;
-                    // This will be false if the input was not in the quickgrading
-                    // form (e.g. column hidden).
-                    $newoutcome = optional_param($paramname, false, PARAM_INT);
-                    if ($newoutcome !== false && ($oldoutcome != $newoutcome)) {
+                    $newoutcome = optional_param($paramname, -1, PARAM_INT);
+                    if ($oldoutcome != $newoutcome) {
                         $data[$outcomeid] = $newoutcome;
                     }
                 }
