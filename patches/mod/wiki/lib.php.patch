diff --git a/mod/wiki/lib.php b/mod/wiki/lib.php
index abf18e2..95de2f3 100644
--- a/mod/wiki/lib.php
+++ b/mod/wiki/lib.php
@@ -279,7 +279,7 @@ function wiki_supports($feature) {
 function wiki_print_recent_activity($course, $viewfullnames, $timestart) {
     global $CFG, $DB, $OUTPUT;
 
-    $sql = "SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid
+    $sql = "SELECT p.*, w.id as wikiid, sw.groupid
             FROM {wiki_pages} p
                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid
                 JOIN {wiki} w ON w.id = sw.wikiid
@@ -288,25 +288,48 @@ function wiki_print_recent_activity($course, $viewfullnames, $timestart) {
     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {
         return false;
     }
-    require_once($CFG->dirroot . "/mod/wiki/locallib.php");
+    $modinfo = get_fast_modinfo($course);
 
     $wikis = array();
 
     $modinfo = get_fast_modinfo($course);
 
-    $subwikivisible = array();
     foreach ($pages as $page) {
-        if (!isset($subwikivisible[$page->subwikiid])) {
-            $subwiki = (object)array('id' => $page->subwikiid, 'wikiid' => $page->wikiid,
-                'groupid' => $page->groupid, 'userid' => $page->userid);
-            $wiki = (object)array('id' => $page->wikiid, 'course' => $course->id, 'wikimode' => $page->wikimode);
-            $subwikivisible[$page->subwikiid] = wiki_user_can_view($subwiki, $wiki);
+        if (!isset($modinfo->instances['wiki'][$page->wikiid])) {
+            // not visible
+            continue;
         }
-        if ($subwikivisible[$page->subwikiid]) {
-            $wikis[] = $page;
+        $cm = $modinfo->instances['wiki'][$page->wikiid];
+        if (!$cm->uservisible) {
+            continue;
+        }
+        $context = context_module::instance($cm->id);
+
+        if (!has_capability('mod/wiki:viewpage', $context)) {
+            continue;
+        }
+
+        $groupmode = groups_get_activity_groupmode($cm, $course);
+
+        if ($groupmode) {
+            if ($groupmode == SEPARATEGROUPS and !has_capability('mod/wiki:managewiki', $context)) {
+                // separate mode
+                if (isguestuser()) {
+                    // shortcut
+                    continue;
         }
+
+                if (is_null($modinfo->groups)) {
+                    $modinfo->groups = groups_get_user_groups($course->id); // load all my groups and cache it in modinfo
+                    }
+
+                if (!in_array($page->groupid, $modinfo->groups[0])) {
+                    continue;
+                }
+            }
+        }
+        $wikis[] = $page;
     }
-    unset($subwikivisible);
     unset($pages);
 
     if (!$wikis) {
