diff --git a/course/modlib.php b/course/modlib.php
index 761bead..daf6d9c 100644
--- a/course/modlib.php
+++ b/course/modlib.php
@@ -83,9 +83,6 @@ function add_moduleinfo($moduleinfo, $course, $mform = null) {
         $newcm->showdescription = 0;
     }
 
-    // From this point we make database changes, so start transaction.
-    $transaction = $DB->start_delegated_transaction();
-
     if (!$moduleinfo->coursemodule = add_course_module($newcm)) {
         print_error('cannotaddcoursemodule');
     }
@@ -98,21 +95,14 @@ function add_moduleinfo($moduleinfo, $course, $mform = null) {
     }
 
     $addinstancefunction    = $moduleinfo->modulename."_add_instance";
-    try {
         $returnfromfunc = $addinstancefunction($moduleinfo, $mform);
-    } catch (moodle_exception $e) {
-        $returnfromfunc = $e;
-    }
     if (!$returnfromfunc or !is_number($returnfromfunc)) {
-        // Undo everything we can. This is not necessary for databases which
-        // support transactions, but improves consistency for other databases.
+        // Undo everything we can.
         $modcontext = context_module::instance($moduleinfo->coursemodule);
         delete_context(CONTEXT_MODULE, $moduleinfo->coursemodule);
         $DB->delete_records('course_modules', array('id'=>$moduleinfo->coursemodule));
 
-        if ($e instanceof moodle_exception) {
-            throw $e;
-        } else if (!is_number($returnfromfunc)) {
+        if (!is_number($returnfromfunc)) {
             print_error('invalidfunction', '', course_get_url($course, $cw->section));
         } else {
             print_error('cannotaddnewmodule', '', course_get_url($course, $cw->section), $moduleinfo->modulename);
@@ -160,7 +150,6 @@ function add_moduleinfo($moduleinfo, $course, $mform = null) {
                "$moduleinfo->instance", $moduleinfo->coursemodule);
 
     $moduleinfo = edit_module_post_actions($moduleinfo, $course, 'mod_created');
-    $transaction->allow_commit();
 
     return $moduleinfo;
 }
