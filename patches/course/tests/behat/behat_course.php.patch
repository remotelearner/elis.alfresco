diff --git a/course/tests/behat/behat_course.php b/course/tests/behat/behat_course.php
index 8cb0a2c..1f698b0 100644
--- a/course/tests/behat/behat_course.php
+++ b/course/tests/behat/behat_course.php
@@ -310,18 +310,6 @@ class behat_course extends behat_base {
         // Section should be hidden.
         $exception = new ExpectationException('The section is not hidden', $this->getSession());
         $this->find('xpath', $sectionxpath . "[contains(concat(' ', normalize-space(@class), ' '), ' hidden ')]", $exception);
-    }
-
-    /**
-     * Checks that all actiities in the specified section are hidden. You need to be in the course page. It can be used being logged as a student and as a teacher on editing mode.
-     *
-     * @Then /^all activities in section "(?P<section_number>\d+)" should be hidden$/
-     * @throws ExpectationException
-     * @throws ElementNotFoundException Thrown by behat_base::find
-     * @param int $sectionnumber
-     */
-    public function section_activities_should_be_hidden($sectionnumber) {
-        $sectionxpath = $this->section_exists($sectionnumber);
 
         // The checking are different depending on user permissions.
         if ($this->is_course_editor()) {
@@ -333,19 +321,31 @@ class behat_course extends behat_base {
             if ($activities = $this->get_section_activities($sectionxpath)) {
 
                 $dimmedexception = new ExpectationException('There are activities that are not dimmed', $this->getSession());
+                $visibilityexception = new ExpectationException('There are activities which visibility icons are clickable', $this->getSession());
                 foreach ($activities as $activity) {
+
                     // Dimmed.
                     $this->find('xpath', "//div[contains(concat(' ', normalize-space(@class), ' '), ' activityinstance ')]" .
                         "/a[contains(concat(' ', normalize-space(@class), ' '), ' dimmed ')]", $dimmedexception, $activity);
+
+                    // Non-JS browsers can not click on img elements.
+                    if ($this->running_javascript()) {
+                        // To check that the visibility is not clickable we check the funcionality rather than the applied style.
+                        $visibilityiconnode = $this->find('css', 'a.editing_show img', false, $activity);
+                        $visibilityiconnode->click();
+                    }
+
+                    // We ensure that we still see the show icon.
+                    $visibilityiconnode = $this->find('css', 'a.editing_show img', $visibilityexception, $activity);
                 }
             }
+
         } else {
             // There shouldn't be activities.
             if ($this->get_section_activities($sectionxpath)) {
                 throw new ExpectationException('There are activities in the section and they should be hidden', $this->getSession());
             }
         }
-
     }
 
     /**
